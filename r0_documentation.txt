# ---------- 

redis_key = rs_param
redis_type = hash table 

r.get('rs_param', 'max_post_age') = age of oldest post (days) in our recommended post pool
r.get('rs_param', 'distinct_category') = number of distinct and available challenge categories 
r.get('rs_param', 'day_index') = an integer between 0 and max_post_age - 1 inclusive



# ---------- 

redis_key = db_len
redis_type = hash table 
hash_field = name of the tables in abbrevation form: {clg, mmbr, post, reaction, tracking}
hash_value = number of records in this table (in previous day)

i.e.  
if r.hget('db_len', 'post') = 10
there are 10 records in the POST table as of last night



# ---------- 

redis_key =  recent_posts_for_category{1,2,3,4,or 5}
redis_type = sorted set (zset)
zset_value = (post_id, score=DAY_INDEX) for all recent post_id belongs to the specified category

i.e. 
if r.zremrangebyscore('recent_posts_for_category1', 0, 10)
then item with score between 0 and 10 inclusive gets removed from the set



# ---------- 

redis_key = on_clg_info 
redis_type = hash
hash_field = challenge_id for which challenges are on going
hash_value = 'category, is_public, duration, finished_date' separated by comma

i.e.
r.hget('on_clg_info', 111) -> return hash value for challenge 111, separated by comma



# ---------- 

redis_key = user_contribution 
redis_type = hash
hash_field = user_id
hash_value = 5 non-negative integers, separated by comma 

i.e. 
if r.hget('user_contribution', 111) == '1,0,0,0,0'
then user 111 spent 1,0,0,0,0 days on challenge category 0,1,2,3,4 respectively.



# ---------- 

redis_key = post_clg_pair
redis_type = hash
hash_field = post_id
hash_value = challenge_id of the post



# ---------- 

redis_key = {user_id}_liked_posts
redis_type = set (zset)
set_value = {post_id} for which the user interacted with. 

# ---------

redis_key  = {user_id}_clgs_preference
redis_type = sorted set (zset)
zset_value = {challenge_id, interaction_frequency}

i.e. 
r.zadd('123_clg_preference', {111: 100}) 
user 123 has reacted to challenge 111 for 100 times 

